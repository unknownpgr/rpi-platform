function read_state(buffer, offsets) {
  const state = {};
  state.state = buffer.readUInt32LE(offsets[0]);
  state.sensor_low = [];
  state.sensor_low[0] = buffer.readUInt16LE(offsets[1] + 0);
  state.sensor_low[1] = buffer.readUInt16LE(offsets[1] + 2);
  state.sensor_low[2] = buffer.readUInt16LE(offsets[1] + 4);
  state.sensor_low[3] = buffer.readUInt16LE(offsets[1] + 6);
  state.sensor_low[4] = buffer.readUInt16LE(offsets[1] + 8);
  state.sensor_low[5] = buffer.readUInt16LE(offsets[1] + 10);
  state.sensor_low[6] = buffer.readUInt16LE(offsets[1] + 12);
  state.sensor_low[7] = buffer.readUInt16LE(offsets[1] + 14);
  state.sensor_low[8] = buffer.readUInt16LE(offsets[1] + 16);
  state.sensor_low[9] = buffer.readUInt16LE(offsets[1] + 18);
  state.sensor_low[10] = buffer.readUInt16LE(offsets[1] + 20);
  state.sensor_low[11] = buffer.readUInt16LE(offsets[1] + 22);
  state.sensor_low[12] = buffer.readUInt16LE(offsets[1] + 24);
  state.sensor_low[13] = buffer.readUInt16LE(offsets[1] + 26);
  state.sensor_low[14] = buffer.readUInt16LE(offsets[1] + 28);
  state.sensor_low[15] = buffer.readUInt16LE(offsets[1] + 30);
  state.sensor_high = [];
  state.sensor_high[0] = buffer.readUInt16LE(offsets[2] + 0);
  state.sensor_high[1] = buffer.readUInt16LE(offsets[2] + 2);
  state.sensor_high[2] = buffer.readUInt16LE(offsets[2] + 4);
  state.sensor_high[3] = buffer.readUInt16LE(offsets[2] + 6);
  state.sensor_high[4] = buffer.readUInt16LE(offsets[2] + 8);
  state.sensor_high[5] = buffer.readUInt16LE(offsets[2] + 10);
  state.sensor_high[6] = buffer.readUInt16LE(offsets[2] + 12);
  state.sensor_high[7] = buffer.readUInt16LE(offsets[2] + 14);
  state.sensor_high[8] = buffer.readUInt16LE(offsets[2] + 16);
  state.sensor_high[9] = buffer.readUInt16LE(offsets[2] + 18);
  state.sensor_high[10] = buffer.readUInt16LE(offsets[2] + 20);
  state.sensor_high[11] = buffer.readUInt16LE(offsets[2] + 22);
  state.sensor_high[12] = buffer.readUInt16LE(offsets[2] + 24);
  state.sensor_high[13] = buffer.readUInt16LE(offsets[2] + 26);
  state.sensor_high[14] = buffer.readUInt16LE(offsets[2] + 28);
  state.sensor_high[15] = buffer.readUInt16LE(offsets[2] + 30);
  state.sensor_raw = [];
  state.sensor_raw[0] = buffer.readUInt16LE(offsets[3] + 0);
  state.sensor_raw[1] = buffer.readUInt16LE(offsets[3] + 2);
  state.sensor_raw[2] = buffer.readUInt16LE(offsets[3] + 4);
  state.sensor_raw[3] = buffer.readUInt16LE(offsets[3] + 6);
  state.sensor_raw[4] = buffer.readUInt16LE(offsets[3] + 8);
  state.sensor_raw[5] = buffer.readUInt16LE(offsets[3] + 10);
  state.sensor_raw[6] = buffer.readUInt16LE(offsets[3] + 12);
  state.sensor_raw[7] = buffer.readUInt16LE(offsets[3] + 14);
  state.sensor_raw[8] = buffer.readUInt16LE(offsets[3] + 16);
  state.sensor_raw[9] = buffer.readUInt16LE(offsets[3] + 18);
  state.sensor_raw[10] = buffer.readUInt16LE(offsets[3] + 20);
  state.sensor_raw[11] = buffer.readUInt16LE(offsets[3] + 22);
  state.sensor_raw[12] = buffer.readUInt16LE(offsets[3] + 24);
  state.sensor_raw[13] = buffer.readUInt16LE(offsets[3] + 26);
  state.sensor_raw[14] = buffer.readUInt16LE(offsets[3] + 28);
  state.sensor_raw[15] = buffer.readUInt16LE(offsets[3] + 30);
  state.sensor_data = [];
  state.sensor_data[0] = buffer.readDoubleLE(offsets[4] + 0);
  state.sensor_data[1] = buffer.readDoubleLE(offsets[4] + 8);
  state.sensor_data[2] = buffer.readDoubleLE(offsets[4] + 16);
  state.sensor_data[3] = buffer.readDoubleLE(offsets[4] + 24);
  state.sensor_data[4] = buffer.readDoubleLE(offsets[4] + 32);
  state.sensor_data[5] = buffer.readDoubleLE(offsets[4] + 40);
  state.sensor_data[6] = buffer.readDoubleLE(offsets[4] + 48);
  state.sensor_data[7] = buffer.readDoubleLE(offsets[4] + 56);
  state.sensor_data[8] = buffer.readDoubleLE(offsets[4] + 64);
  state.sensor_data[9] = buffer.readDoubleLE(offsets[4] + 72);
  state.sensor_data[10] = buffer.readDoubleLE(offsets[4] + 80);
  state.sensor_data[11] = buffer.readDoubleLE(offsets[4] + 88);
  state.sensor_data[12] = buffer.readDoubleLE(offsets[4] + 96);
  state.sensor_data[13] = buffer.readDoubleLE(offsets[4] + 104);
  state.sensor_data[14] = buffer.readDoubleLE(offsets[4] + 112);
  state.sensor_data[15] = buffer.readDoubleLE(offsets[4] + 120);
  state.position = buffer.readDoubleLE(offsets[5]);
  state.speed = buffer.readDoubleLE(offsets[6]);
  state.battery_voltage = buffer.readDoubleLE(offsets[7]);
  state.track = buffer.readUInt8(offsets[8]);
  state.encoder_left = buffer.readInt32LE(offsets[9]);
  state.encoder_right = buffer.readInt32LE(offsets[10]);
  return state;
}
module.exports = read_state;
